import java.util.HashSet;
import java.util.Set;

public class WeightedStrings {
    public static String[] weightedStrings(String s, int[] queries) {
        // Buat sebuah set untuk menyimpan semua bobot karakter dan substring
        Set<Integer> weights = new HashSet<>();
        
        int i = 0;
        while (i < s.length()) {
            char c = s.charAt(i);
            int weight = c - 'a' + 1;
            // Tambahkan bobot karakter tunggal
            weights.add(weight);
            
            // Hitung dan tambahkan bobot untuk substring berulang
            int repeatWeight = weight;
            int j = i + 1;
            while (j < s.length() && s.charAt(j) == c) {
                repeatWeight += weight;
                weights.add(repeatWeight);
                j++;
            }
            
            i = j;
        }
        
        // Proses queries
        String[] result = new String[queries.length];
        for (int k = 0; k < queries.length; k++) {
            if (weights.contains(queries[k])) {
                result[k] = "Yes";
            } else {
                result[k] = "No";
            }
        }
        
        return result;
    }
    
    public static void main(String[] args) {
        String s = "abbcccd";
        int[] queries = {1, 3, 9, 8};
        String[] result = weightedStrings(s, queries);
        
        // Output hasil
        for (String res : result) {
            System.out.println(res);
        }
    }
}
